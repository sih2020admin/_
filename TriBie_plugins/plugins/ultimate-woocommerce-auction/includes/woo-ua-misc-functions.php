<?php/*** Extra Functions file** @package Ultimate WooCommerce Auction* @author Nitesh Singh * @since 1.0* @return void*/if ( !defined( 'ABSPATH' ) ) exit;/*** Get Auction List By User Id** @package Ultimate WooCommerce Auction* @author Nitesh Singh * @since 1.0* @return void*/ function get_woo_ua_auction_by_user( $user_id  ) {		global $wpdb;	   $table = $wpdb->prefix."woo_ua_auction_log";	        $query   = $wpdb->prepare("SELECT auction_id,MAX(bid) FROM $table  WHERE userid = %d GROUP by auction_id ORDER by date DESC", $user_id);       $results = $wpdb->get_results( $query ); 		foreach ($results as &$var) {			                 $query   = $wpdb->prepare( "SELECT bid FROM $table WHERE auction_id = %d AND userid = %d ORDER by CAST(bid AS decimal(50,5)) DESC, date ASC LIMIT 1", $var->auction_id, $user_id );                $result = $wpdb->get_var( $query );                $var->max_bid = $result;            }			return $results; }/*** Get Auction WatchList By User Id** @package Ultimate WooCommerce Auction* @author Nitesh Singh * @since 1.0* @return void*/ function get_woo_ua_auction_watchlist_by_user( $user_id  ) {		global $wpdb;		$results = get_user_meta( $user_id, "woo_ua_auction_watch"); 		return $results; } /*** Get Url For checkout** @package Ultimate WooCommerce Auction* @author Nitesh Singh * @since 1.0* @return void*/function woo_ua_auction_get_checkout_url() {		$checkout_page_id = wc_get_page_id('checkout');		$checkout_url     = '';		if ( $checkout_page_id ) {		if ( is_ssl() || get_option('woocommerce_force_ssl_checkout') == 'yes' )						$checkout_url = str_replace( 'http:', 'https:', get_permalink( $checkout_page_id ) );					else			$checkout_url = get_permalink( $checkout_page_id );	}	return apply_filters( 'woocommerce_get_checkout_url', $checkout_url );}/*** Bid Placed Message** @package Ultimate WooCommerce Auction* @author Nitesh Singh * @since 1.0* @return void*/function woo_ua_bid_place_message( $product_id ) {		global $woocommerce; 	$product_data = wc_get_product($product_id);	$current_user = wp_get_current_user();	if($current_user->ID == $product_data->get_woo_ua_auction_current_bider()){				if(!$product_data->is_woo_ua_reserve_met()){						$message = sprintf( __( 'Your Bid Placed Successfully for &quot;%s&quot;.', 'woo_ua' ),$product_data -> get_title()  );					} else{			if( $product_data->get_woo_ua_auction_max_bid()){								$message = sprintf( __( 'Your Bid has been placed successfully for &quot;%s&quot;! Your max bid is %s.', 'woo_ua' ),$product_data -> get_title(), wc_price($product_data->get_woo_ua_auction_max_bid())  );							}else{				$message = sprintf( __( 'Your Bid has been placed successfully for &quot;%s&quot;!', 'woo_ua' ),$product_data -> get_title()  );			}		}				} else {		$message = sprintf( __( "Your bid has been placed successfully but you have been outbid for &quot;%s&quot;!", 'woo_ua' ),$product_data -> get_title()  );		}		wc_add_notice ( apply_filters('woo_ua_auctions_bid_place_message', $message ,$product_id ) );}if (!function_exists('wc_get_price_decimals')) {	function wc_get_price_decimals() {	return absint( get_option( 'wc_price_num_decimals', 2 ) );	}}